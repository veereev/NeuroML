<div>
<img src="../images/lems_dev.png" />
Development of LEMS & mapping to NeuroML 2

LEMS (Low Entropy Model Specification) is a new XML based language with interpreter developed by Robert Cannon for specifying generic models of dynamical systems. ComponentType (ComponentClass has also been used as a name for these, see below) elements which specify Parameters, StateVariables and their dynamical Behaviours can be defined as templates for model elements (e.g. HH ion channels, abstract cells, etc.). Components are instances of these with specific values of Parameters (e.g. HH squid axon Na+ channel, I&F cell with threshold -60mV, etc.).

A Java package, the LEMS Reference Implementation (LRI) which includes examples of LEMS files together with the interpreter for executing them is available here.

A core set of ComponentTypes describing the behaviour of dynamical elements in NeuroML 2 has been defined in LEMS:

    Cell models: Cells.xml (source in LEMS)
    Network elements: Networks.xml (source in LEMS)
    Ion channels: Channels.xml (source in LEMS)
    Synapse models: Synapses.xml (source in LEMS)
    Mapping of PyNN cells & synapses: PyNN.xml (source in LEMS)
    Dimensions/units allowed: NeuroMLCoreDimensions.xml (source in LEMS)

These serve as the basis for Component definitions in NeuroML 2 files, e.g. izhikevichCell, iafTauCell, ionChannelHH, etc. The behaviour of the model element (e.g. the behaviour of v in terms of threshold, reset, tau in a simple I&F cell) is specified in the ComponentType, and the user only has to supply the name of the ComponentType and give parameter values to create a Component in their NeuroML file.
</div>
