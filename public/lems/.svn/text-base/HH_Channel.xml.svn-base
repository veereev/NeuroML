<Lems>


<Dimension name="voltage" m="1" l="2" t="-3" i="-1"/>
<Dimension name="time" t="1"/>
<Dimension name="per_time" t="-1"/>
<Dimension name="conductance" m="-1" l="-2" t="3" i="2"/>
<Dimension name="capacitance" m="-1" l="-2" t="4" i="2"/>
<Dimension name="current" i="1"/>


<Include file="HH_Environment.xml"/>


<ComponentType name="HHRate">
    <Parameter name="rate" dimension="per_time"/>
    <Parameter name="midpoint" dimension="voltage"/>
    <Parameter name="scale" dimension="voltage"/>
    
    <Requirement name="v" dimension="voltage"/>
    <Exposure name="r" dimension="per_time"/>
</ComponentType>



<ComponentType name="HHExpRate" extends="HHRate">
    <Behavior>
        <DerivedVariable name="r" exposure="r" value="rate * exp((v - midpoint)/scale)"/>
    </Behavior>
</ComponentType>


<ComponentType name="HHSigmoidRate" extends="HHRate">
    <Behavior>
        <DerivedVariable name="r" exposure="r" value="rate / (1 + exp(0 - (v - midpoint)/scale))"/>
    </Behavior>
</ComponentType>

 <ComponentType name="HHExpLinearRate" extends="HHRate">
    <Behavior>
        <DerivedVariable name="x" value="(v - midpoint) / scale"/>
        <DerivedVariable name="r" exposure="r" value="rate * x / (1 - exp(0 - x))"/>
    </Behavior>
</ComponentType>
 

 
<ComponentType name="HHGate">
    <Parameter name="power" dimension="none"/> 
    <Child name="Forward" type="HHRate"/>
    <Child name="Reverse" type="HHRate"/>
    
    <Requirement name="v" dimension="voltage"/>
    <Exposure name="fcond" dimension="none"/>
    <Exposure name="q" dimension="none"/>
    
    <DefaultBehavior behavior="binf"/>
    
     <Behavior name="b01">
        <!--  this is mathematically OK, but needs smarter numerics than lems currently has -->
        <StateVariable name="q" exposure="q" dimension="none"/>
        <DerivedVariable name="rf" dimension="per_time" select="Forward/r"/>
        <DerivedVariable name="rr" dimension="per_time" select="Reverse/r"/> 
        <TimeDerivative variable="q" value="rf * (1 - q) - rr * q"/>
        <DerivedVariable exposure="fcond" name="fcond" dimension="none" value="q^power"/>
    </Behavior>    
    
    
    <Behavior name="binf">
        <!--  this is the same as above, but works with dumb numerics -->
        <StateVariable name="x" dimension="none"/>
        <DerivedVariable name="ex" dimension="none" value="exp(x)"/>
        <DerivedVariable name="q" exposure="q" dimension="none" value="ex / (1 + ex)"/>
        <DerivedVariable name="rf" dimension="per_time" select="Forward/r"/>
        <DerivedVariable name="rr" dimension="per_time" select="Reverse/r"/> 
        <TimeDerivative variable="x" value="(1 + ex)^2 / ex * (rf * (1 - q) - rr * q)"/>
        <DerivedVariable name="fcond" exposure="fcond" value="q^power"/>
    </Behavior>    
</ComponentType>
 
 
 
  
<ComponentType name="HHChannel">
    <Parameter name="conductance" dimension="conductance"/>
    <Children name="gates" type="HHGate" min="0" max="4"/>
    <ComponentRef name="species" type="Species"/>
    
    <Exposure name="g" dimension="conductance"/>
 
    <Behavior>
        <DerivedVariable name="gatefeff" dimension="none" 
                  select="gates[*]/fcond" reduce="product"/>
        <DerivedVariable exposure="g" name="g" value="conductance * gatefeff"/>
    </Behavior>
</ComponentType>



</Lems>

